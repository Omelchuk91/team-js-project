{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,8FAiBA,EAAAC,EAAAC,WAAU,YAEV,EAAAC,EAAAC,oBAAmBL,EAAAM,MAAMC,IACvB,GAAIA,EAAM,CACIA,EAAKC,IACjBC,aAAaC,QAAQ,OAAQ,IAC7B,EAAAR,EAAAS,mBAEA,EAAAT,EAAAU,kB,MAGAC,QAAQC,IAAI,sBACZL,aAAaC,QAAQ,OAAQ,GAC7BK,SAASC,QAAQ,e,IAQrB,MAAMC,EAAM,IAAI,EAAAC,EAAAC,SAEVC,EAAWC,SAASC,cAAc,0BAKlCC,GAJYF,SAASC,cAAc,iBAGvB,CAAC,MAAO,OAAQ,QACTE,IAAIP,EAAIQ,eACjCC,QAAQC,IAAIJ,GACTK,MAAMC,KAKT,SAA8BC,GAC5BjB,QAAQC,IAAIgB,GACZ,MAAMC,EAAYD,EACfN,KAAIQ,IACH,MAAMC,eACJA,EAAcC,YACdA,EAAWC,aACXA,EAAYC,aACZA,EAAYC,OACZA,EAAMC,GACNA,GACEN,EACEO,EAAUF,EAAOb,KAAIgB,GAASA,EAAMF,KAEpCG,EAAO,IAAIC,KAAKN,GAAcO,cACpC,MAAO,gBAAgBL,wNAmC7B,SAAwBM,GACtB,MAAMC,EACJ,6DAEF,OAAOD,EACH,kCAAkCA,IAClCC,C,CArCgCC,CAAeZ,yUAOMD,uIAiC3D,SAAmBc,GACjB,IAAIC,EAAW,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,GAAK,EACnCE,EAAAC,GAAMf,OAAOgB,MAAK,EAACf,GAAEA,EAAEgB,KAAEA,MACnBhB,IAAOS,EAAIE,IACbD,EAASO,KAAKD,EAAK,IAIrBN,EAASE,OAAS,GACpBF,EAASQ,OAAO,EAAG,EAAG,SAExB,OAAOR,C,CA3CuDS,CACxDlB,GACAmB,KAAK,WAAWjB,8FAC2DN,EAAawB,QACxF,0GAIkB,IAErBD,KAAK,IACRtC,EAASwC,UAAY7B,C,CA3CnB8B,CAAqBhC,EAAM,IAE5BiC,MAAMjD,QAAQC","sources":["src/library.js"],"sourcesContent":["import { auth } from './js/firebase/auth';\nimport {\n  // createUserWithEmailAndPassword,\n  // signInWithEmailAndPassword,\n  onAuthStateChanged,\n} from 'firebase/auth';\nimport refs from './js/refs';\nimport {\n  addAuthBtns,\n  removeAuthBtns,\n  addNav,\n  removeNav,\n  renderNav,\n  addLogOutButton,\n} from './js/auth/auth-nav';\nimport { insertData, readData } from './js/firebase/db-service';\n\nrenderNav('library');\n\nonAuthStateChanged(auth, user => {\n  if (user) {\n    const uid = user.uid;\n    localStorage.setItem('auth', 1);\n    removeAuthBtns();\n    // addNav('library');\n    addLogOutButton();\n    // insertData(7, 'watchlist');\n  } else {\n    console.log('User is signed out');\n    localStorage.setItem('auth', 0);\n    location.replace('./index.html');\n  }\n});\n\nimport MovieApiService from './js/movie-service';\nimport genre from './genres.json';\nimport { showInfoModal } from './js/model-info-film';\n\nconst api = new MovieApiService()\n\nconst cardList = document.querySelector('.js-films-list-library')\nconst infoModal = document.querySelector('.modal-holder')\n\n\nconst watchlist = [49046, 913290, 766475];\nconst movies = watchlist.map(api.getMovieInfo);\nPromise.all(movies)\n  .then((array) => {\n    createFilmCardMarkup(array);\n  })\n  .catch(console.log);\n\nfunction createFilmCardMarkup(films) {\n  console.log(films)\n  const newMarkup = films\n    .map(film => {\n      const {\n        original_title,\n        poster_path,\n        vote_average,\n        release_date,\n        genres,\n        id,\n      } = film;\n      const fIlmIds = genres.map(genre => genre.id\n      )\n      const year = new Date(release_date).getFullYear();\n      return `<li data-id=\"${id}\" class=\"card film-card\">\n                        <div class=\"film-card__img-wrap\">\n                            <img\n                                class=\"film-card__img\"\n                                src=${fetchFilmPhoto(poster_path)}\n                                alt=\"Poster to movie\"\n                                width=\"395\"\n                                height=\"574\"\n                            />\n                        </div>\n                        <div class=\"film-card__wrap\">\n                            <h2 class=\"film-card__title\">${original_title}</h2>\n                            <div class=\"film-card__wrapper\">\n                                <span class=\"film-card__info\">${getGenres(\n        fIlmIds\n      ).join(', ')} | ${year}</span>\n                                <span data-film-rating class=\"film-card__rating\">${vote_average.toFixed(\n        2\n      )}</span>\n                            </div>\n                        </div>\n                    </li>`;\n    })\n    .join('');\n  cardList.innerHTML = newMarkup;\n\n  // cardList.addEventListener('click', event => {\n  //   const card = event.target.closest('li');\n  //   if (card) {\n  //     const cardId = card.getAttribute('data-id');\n  //     showInfoModal(infoModal, api, cardId);\n  //   }\n  // });\n}\n\nfunction fetchFilmPhoto(posterPath) {\n  const noPosterAvaliable =\n    'https://www.reelviews.net/resources/img/default_poster.jpg';\n\n  return posterPath\n    ? `https://image.tmdb.org/t/p/w500${posterPath}`\n    : noPosterAvaliable;\n}\n\nfunction getGenres(ids) {\n  let newArray = [];\n  for (let i = 0; i < ids.length; i += 1) {\n    genre.genres.find(({ id, name }) => {\n      if (id === ids[i]) {\n        newArray.push(name);\n      }\n    });\n  }\n  if (newArray.length > 2) {\n    newArray.splice(2, 3, 'Other');\n  }\n  return newArray;\n}"],"names":["$6kcu2","parcelRequire","$XwkCV","renderNav","$amyG6","onAuthStateChanged","auth","user","uid","localStorage","setItem","removeAuthBtns","addLogOutButton","console","log","location","replace","$ce3726a01b8ab25a$var$api","$eqUos","default","$ce3726a01b8ab25a$var$cardList","document","querySelector","$ce3726a01b8ab25a$var$movies","map","getMovieInfo","Promise","all","then","array","films","newMarkup","film","original_title","poster_path","vote_average","release_date","genres","id","fIlmIds","genre1","year","Date","getFullYear","posterPath","noPosterAvaliable","$ce3726a01b8ab25a$var$fetchFilmPhoto","ids","newArray","i","length","$parcel$interopDefault","$eRClg","find","name","push","splice","$ce3726a01b8ab25a$var$getGenres","join","toFixed","innerHTML","$ce3726a01b8ab25a$var$createFilmCardMarkup","catch"],"version":3,"file":"library.9f39fa6c.js.map"}